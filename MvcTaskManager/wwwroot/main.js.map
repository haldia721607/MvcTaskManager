{"version":3,"sources":["./src/app/services/countries.service.ts","./src/app/models/task.ts","./src/app/directives/client-location-status-validator.directive.ts","./src/app/services/task-priorities.service.ts","./src/app/services/projectservice.service.ts","./src/app/directives/project-idunique-validator.directive.ts","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/services/login.service.ts","./src/app/directives/alert.directive.ts","./src/app/services/task-statuses.service.ts","./src/app/guards/can-deactivate-guard.service.ts","./src/app/guards/can-activate-guard.service.ts","./src/app/models/task-status-detail.ts","./src/app/directives/team-size-validator.directive.ts","./src/app/services/router-logger.service.ts","./src/app/interceptors/jwt-un-authorized-interceptor.service.ts","./src/app/animations/my-animations.ts","./src/app/shared/shared.module.ts","./src/app/employee/employee.module.ts","./src/app/employee/employee-routing/employee-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/employee/components/create-task/create-task.component.ts","./src/app/employee/components/create-task/create-task.component.html","./src/app/employee/components/tasks/tasks.component.ts","./src/app/employee/components/tasks/tasks.component.html","./src/app/directives/custom-validators.service.ts","./src/app/models/login-view-model.ts","./src/app/app.module.ts","./src/app/directives/componentloader.directive.ts","./src/app/interceptors/jwt-interceptor.service.ts","./src/app/pipes/sort.pipe.ts","./src/app/pipes/number-to-words.pipe.ts","./src/app/admin/components/about/about.component.ts","./src/app/admin/components/about/about.component.html","./src/app/employee/components/update-task/update-task.component.ts","./src/app/employee/components/update-task/update-task.component.html","./src/app/employee/components/edit-task/edit-task.component.ts","./src/app/employee/components/edit-task/edit-task.component.html","./src/app/services/tasks.service.ts","./src/app/pipes/paging.pipe.ts","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/app-routing.module.ts","./src/app/models/edit-task.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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C;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IACjC,sEAAU,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC;IAEjC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;IAClC,sEAAU,CAAC,QAAQ,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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Country } from '../models/country';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCountries(): Observable<Country[]> {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n\n  getCountryByCountryID(CountryID: number): Observable<Country> {\n    return this.httpClient.get<Country>(\"/api/countries/searchbycountryid/\" + CountryID, { responseType: \"json\" });\n  }\n\n  insertCountry(newCountry:Country):Observable<Country>{\n    return this.httpClient.post<Country>(\"/api/countries\", newCountry, { responseType: \"json\" });\n  }\n\n  updateCountry(existingCountry: Country): Observable<Country> {\n    return this.httpClient.put<Country>(\"/api/countries\", existingCountry, { responseType: \"json\" });\n  }\n\n  deleteCountry(CountryID: number): Observable<string> {\n    return this.httpClient.delete<string>(\"/api/countries?CountryID=\" + CountryID);\n  }\n}\n","import { Project } from './project';\n\nexport class Task {\n    TaskID: number;\n    TaskName: string;\n    Description: string;\n    CreatedOn: string;\n    ProjectID: number;\n    CreatedBy: string;\n    AssignedTo: string;\n    TaskPriorityID: number;\n    LastUpdatedOn: number;\n    CurrentStatus: number;\n    CurrentTaskStatusID: number;\n    CreatedOnString: string;\n    LastUpdatedOnString: string;\n\n    Project: Project;\n    CreatedByUser: any;\n    AssignedToUser: any;\n    TaskStatusDetails: any;\n\n    constructor() {\n        this.TaskID = null;\n        this.TaskName = null;\n        this.Description = null;\n        this.CreatedOn = null;\n        this.ProjectID = null;\n        this.CreatedBy = null;\n        this.AssignedTo = null;\n        this.TaskPriorityID = null;\n        this.LastUpdatedOn = null;\n        this.CurrentStatus = null;\n        this.CreatedOnString = null;\n        this.LastUpdatedOnString = null;\n\n        this.Project = null;\n        this.CreatedByUser = null;\n        this.AssignedToUser = null;\n        this.TaskStatusDetails = null;\n        this.TaskStatusDetails = null;\n        this.CurrentTaskStatusID = null;\n    }\n}\n","import { Directive } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [ { provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator {\n\n  constructor() { }\n  validate(control: AbstractControl): ValidationErrors | null {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { clientLocationStatus: { valid: false }}; //invalid\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskPriority } from '../models/task-priorities';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskPrioritiesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getTaskPriorities(): Observable<TaskPriority[]> {\n    return this.httpClient.get<TaskPriority[]>(\"/api/taskpriorities\", { responseType: \"json\" });\n  }\n\n  getTaskPrioritytByTaskPriorityID(TaskPriorityID: number): Observable<TaskPriority> {\n    return this.httpClient.get<TaskPriority>(\"/api/taskpriorities/searchbytaskpriorityid/\" + TaskPriorityID, { responseType: \"json\" });\n  }\n\n  insertTaskPriority(newTaskPriority: TaskPriority): Observable<TaskPriority> {\n    return this.httpClient.post<TaskPriority>(\"/api/taskpriorities\", newTaskPriority, { responseType: \"json\" });\n  }\n\n  updateTaskPriority(existingTaskPriority: TaskPriority): Observable<TaskPriority>\n  {\n    return this.httpClient.put<TaskPriority>(\"/api/taskpriorities\", existingTaskPriority, { responseType: \"json\" });\n  }\n\n  deleteTaskPriority(TaskPriorityID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/taskpriorities?TaskPriorityID=\" + TaskPriorityID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { BehaviorSubject, Observable, Observer, Subject } from 'rxjs';\nimport { Project } from '../models/project';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  //Ye example Observable unicast ka hai ./ \n  //ishme ek Observable pass karta hai value Observer ko woo bhi individually\n  // or ishme hum optional bhi hai ki hum kuch Observer ko value nahi pass karna / ya skip karna hai . \n  //toh hum ishme kar sakte hai\n  // public MyObservable: Observable<boolean>;\n  // public MyObservers: Observer<boolean>[] = [];\n\n  //Ye example (subject class multicast)  ka hai ./ \n  //But jab hame sare Observer ko ek sath value pass karna ho to hum (subject class multicast) use karte hai\n  //ishme hum ek saath sare Observer ko value pass kar sakte hai / But agr hume koi bhi Observer \n  //skip karna ho / ya na pass karno ho value toh hum ishme nahi kar skate \n  // public MySubject: Subject<boolean>;\n\n  //Ye example (BehavierSubject) ka hai ./ \n  //Ager last multicast brodcast ke value ke stae hamesh mainten kar ke rakhna hai toh hum BehavierSubject ka\n  //use kare hai ye state ko mainten karta hai \n  public MySubject: BehaviorSubject<boolean>;\n  hideDetails: boolean = false;\n\n  constructor(private httpClient: HttpClient) {\n    //Ye example Observable unicast ka hai ./ \n    //ishme ek Observable pass karta hai value Observer ko woo bhi individually\n    // or ishme hum optional bhi hai ki hum kuch Observer ko value nahi pass karna / ya skip karna hai . \n    //toh hum ishme kar sakte hai\n    // this.MyObservable = Observable.create((observer: Observer<boolean>) => {\n    //   this.MyObservers.push(observer);\n    // });\n\n    //Ye example (subject class multicast)  ka hai ./ \n    //But jab hame sare Observer ko ek sath value pass karna ho to hum (subject class multicast) use karte hai\n    //ishme hum ek saath sare Observer ko value pass kar sakte hai / But agr hume koi bhi Observer \n    //skip karna ho / ya na pass karno ho value toh hum ishme nahi kar skate \n    // this.MySubject = new Subject<boolean>();\n\n    //Ye example (BehavierSubject) ka hai ./ \n    //Ager last multicast brodcast ke value ke stae hamesh mainten kar ke rakhna hai toh hum BehavierSubject ka\n    //use kare hai ye state ko mainten karta hai \n    //Or ishme hame seperate property Jo hideDetails ki jarurat nahi hai ,Because hum ishme default already assing karte hai\n    this.MySubject = new BehaviorSubject<boolean>(false);\n  }\n\n  toggleDetails() {\n    //Ye example Observable unicast ka hai ./ \n    //ishme ek Observable pass karta hai value Observer ko woo bhi individually\n    // or ishme hum optional bhi hai ki hum kuch Observer ko value nahi pass karna / ya skip karna hai . \n    //toh hum ishme kar sakte hai\n    // this.hideDetails = !this.hideDetails;\n    // for (let i = 0; i < this.MyObservers.length; i++) {\n    //   console.log(\"MyObservers -\" + this.MyObservers.length);\n    //   this.MyObservers[i].next(this.hideDetails);\n    // }\n\n    //Ye example (subject class multicast)  ka hai ./ \n    //But jab hame sare Observer ko ek sath value pass karna ho to hum (subject class multicast) use karte hai\n    //ishme hum ek saath sare Observer ko value pass kar sakte hai / But agr hume koi bhi Observer \n    //skip karna ho / ya na pass karno ho value toh hum ishme nahi kar skate \n    // this.hideDetails = !this.hideDetails;\n    // this.MySubject.next(this.hideDetails);\n\n    //Ye example (BehavierSubject) ka hai ./ \n    //Ager last multicast brodcast ke value ke stae hamesh mainten kar ke rakhna hai toh hum BehavierSubject ka\n    //use kare hai ye state ko mainten karta hai \n    //Or ishme hame seperate property Jo hideDetails ki jarurat nahi hai ,Because hum ishme default already assing karte hai\n    this.MySubject.next(!this.MySubject.value);\n\n  }\n\n  getAllProjects(): Observable<Project[]> {\n\n    //This is code for attach JWT token in headers manually || \n    //Now this code is comment becase this Jwt token add autometically by injecting \n    //JwtInterceptor service you can see JwtInterceptor service code on that ts page\n    //...........................................\n    // var currentUser = { Token: \"\" };\n    // var headers = new HttpHeaders();\n    // headers = headers.set(\"Authorization\", \"Bearer \");\n    // if (sessionStorage.currentUser != null) {\n    //   currentUser = JSON.parse(sessionStorage.currentUser);\n    //   headers = headers.set(\"Authorization\", \"Bearer \" + currentUser.Token);\n    // }\n    // return this.httpClient.get<Project[]>(\"/api/projects\", { headers: headers, responseType: \"json\" })\n\n    return this.httpClient.get<Project[]>(\"/api/projects\", { responseType: \"json\" })\n      .pipe(map(\n        (data: Project[]) => {\n          for (let i = 0; i < data.length; i++) {\n            //data[i].TeamSize = data[i].TeamSize * 100;\n          }\n          return data;\n        }\n      ));\n  }\n  getProjectByProjectID(ProjectID: number): Observable<Project> {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, { responseType: \"json\" })\n  }\n  insertProject(newProject: Project): Observable<Project> {\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project): Observable<Project> {\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number): Observable<string> {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID, { responseType: \"json\" });\n  }\n\n  SearchProjects(searchBy: string, searchText: string): Observable<Project[]> {\n    return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n}\n\n\n\n","import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './../services/projectservice.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from './../models/project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator {\n  constructor(private projectsService: ProjectsService) { }\n  validate(control: AbstractControl): Observable<ValidationErrors | null> {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], searchBy: string, searchText: string): any {\n    if (value == null) {\n      return value;\n    }\n    let resaultArrary = [];\n    if (searchText != null) {\n      for (let item of value) {\n        if (String(item[searchBy]).toLowerCase().indexOf(searchText.toLowerCase()) >= 0) {\n          resaultArrary.push(item);\n        }\n      }\n    }\n    if (resaultArrary.length > 0) {\n      return resaultArrary;\n    }\n    return value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from './../models/login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { SignUpViewModel } from './../models/sign-up-view-model';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient: HttpClient\n  constructor(private httpBackend: HttpBackend, private router: Router, private jwtHelperService: JwtHelperService) {\n\n  }\n\n  currentUserName: string = null;\n  currentUserRole: string = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\" })\n      .pipe(map(user => {\n        if (user) {\n          this.currentUserName = user.UserName;\n          this.currentUserRole = user.Role;\n          sessionStorage.currentUser = JSON.stringify(user);\n        }\n        return user;\n      }));\n  }\n  public detectIfAlreadyLoggedIn() {\n    if (this.jwtHelperService.isTokenExpired() == false) {\n      var currentUser = JSON.parse(sessionStorage.currentUser);\n      this.currentUserName=currentUser.UserName;\n      this.currentUserRole=currentUser.Role;\n    }\n  }\n  // public Register(signUpViewModel: SignUpViewModel): Observable<any>\n  // {\n  //   this.httpClient = new HttpClient(this.httpBackend);\n  //   return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\", observe: \"response\" })\n  //   .pipe(map(response => {\n  //     if (response)\n  //     {\n  //       this.currentUserName = response.body.userName;\n  //       sessionStorage.currentUser = JSON.stringify(response.body);\n  //       sessionStorage.XSRFRequestToken = response.headers.get(\"XSRF-REQUEST-TOKEN\");\n  //     }\n  //     return response.body;\n  //   }));\n  // }\n  public Register(signUpViewModel: SignUpViewModel): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\" })\n      .pipe(map(user => {\n        if (user) {\n          this.currentUserName = user.UserName;\n          this.currentUserRole=user.Role;\n          sessionStorage.currentUser = JSON.stringify(user);\n        }\n        return user;\n      }));\n  }\n\n  getUserByEmail(Email: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getUserByEmail/\" + Email, { responseType: \"json\" })\n  }\n\n\n  public Logout() {\n    sessionStorage.removeItem(\"currentUser\");\n    sessionStorage.removeItem(\"currentUserRole\");\n    this.currentUserName = null;\n    this.currentUserRole = null;\n    this.router.navigateByUrl(\"/login\");\n  }\n\n  public isAuthenticated(): boolean {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")).Token : null;\n    if (this.jwtHelperService.isTokenExpired(token = token)) {\n      return false;//token is not valid\n    }\n    else {\n      return true;//token is valid\n    }\n  }\n\n  public getAllEmployes(): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.get<any>(\"/api/getallemployees\", { responseType: \"json\" });\n  }\n}\n","import { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appAlert]'\n})\nexport class AlertDirective {\n  @Input(\"error\") error: string;\n  @HostBinding(\"title\") title: string;\n  divElement: any;\n  spanElement: any;\n  spanText: any;\n\n  constructor(private elementRef: ElementRef, private renderer2: Renderer2) { }\n\n  ngOnInit() {\n    //this is example or Renderer2\n    //Renderer2 dynamic html tag create karta hai / ishe example mai hum htmpl dynamic create kar rahe hai or style,class,errer text add kar rahe hai\n    /* div */\n    this.divElement = this.renderer2.createElement(\"div\"); //<div></div> | Div tag create kiya \n\n    this.renderer2.setAttribute(this.divElement, \"role\", \"alert\"); //<div role=\"alert\"> </div> | add kiya role attribute \n\n    this.renderer2.setAttribute(this.divElement, \"class\", \"alert alert-danger fade show\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\"> </div> | ishme humne add kiya class ko\n\n    this.renderer2.setStyle(this.divElement, \"transition\", \"transform 0.5s\");\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> </div> | ishe example mai humne style attribute tag add kiya\n\n    /* span */\n    this.spanElement = this.renderer2.createElement(\"span\"); // ishme span tag create kiya\n    this.renderer2.setAttribute(this.spanElement, \"class\", \"message\");// span tag mai class add kiya\n    //<span class=\"message\"></span>\n\n    /* spanText */\n    this.spanText = this.renderer2.createText(this.error); // spn tag mai dynamic error message ko add kiya  \n    this.renderer2.appendChild(this.spanElement, this.spanText);//ab error message ko span tag mai add kiya\n    //<span class=\"message\">${this.error}</span>\n\n    this.renderer2.appendChild(this.divElement, this.spanElement);//span tag ko div element add kiya\n    //<div role=\"alert\" class=\"alert alert-danger fade show\" style=\"transition: transform 0.5s\"> <span class=\"message\">${this.error}</span> </div>\n\n    this.elementRef.nativeElement.appendChild(this.divElement);// finaly div tag dom mai render kiya\n\n    //Example of direct add div tag \n    //   this.elementRef.nativeElement.innerHTML = `\n    //   <div class=\"alert alert-danger \" role=\"alert\" style=\"transition: transform 0.5s\">\n    //     <span class=\"text-danger\">${this.error}</span>\n    //   </div>\n    // `;\n\n    this.title = \"Please try again...!\";\n  }\n\n  @HostListener(\"mouseenter\", [\"$event\"])\n  onMouseEnter(event) {\n    // this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1.1)\";\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1.1)\");\n  }\n  @HostListener(\"mouseleave\", [\"$event\"])\n  onMouseLeave() {\n    // this.elementRef.nativeElement.querySelector(\".alert\").style.transform = \"scale(1)\";\n    this.renderer2.setStyle(this.divElement,\"transform\",\"scale(1)\");\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskStatus } from '../models/task-status';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskStatusesService {\n  constructor(private httpClient: HttpClient) { }\n\n  getTaskStatus(): Observable<TaskStatus[]> {\n    return this.httpClient.get<TaskStatus[]>(\"/api/taskstatuses\", { responseType: \"json\" });\n  }\n\n  getTaskStatusByTaskStatusD(TaskStatusID: number): Observable<TaskStatus> {\n    return this.httpClient.get<TaskStatus>(\"/api/taskstatuses/searchbytaskstatusid/\" + TaskStatusID, { responseType: \"json\" });\n  }\n\n  insertTaskStatus(newTaskStatus: TaskStatus): Observable<TaskStatus> {\n    return this.httpClient.post<TaskStatus>(\"/api/taskstatuses\", newTaskStatus, { responseType: \"json\" });\n  }\n\n  updatTaskStatus(existingTaskStatus: TaskStatus): Observable<TaskStatus>\n  {\n    return this.httpClient.put<TaskStatus>(\"/api/taskstatuses\", existingTaskStatus, { responseType: \"json\" });\n  }\n\n  deleteTaskStatus(TaskStatusID: number): Observable<string>\n  {\n    return this.httpClient.delete<string>(\"/api/taskstatuses?TaskStatusID=\" + TaskStatusID);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\n\nexport interface CanComponentDeactivate {\n  canLeave: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactivateGuardService implements CanDeactivate<CanComponentDeactivate> {\n  constructor() { }\n  canDeactivate(component: CanComponentDeactivate) {\n    if (component.canLeave == true) {\n      return true;\n    }\n    else {\n      return confirm(\"Do you want to discard changes?\")\n    }\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './../services/login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate {\n\n  constructor(private loginService: LoginService, private router: Router, private jwtHelperService: JwtHelperService) { }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    let url: string = state.url;\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")).Token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data.expectedRole) {\n      return true;\n    }\n    else {\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n  }\n}\n","import { TaskStatus } from './task-status';\n\nexport class TaskStatusDetail {\n    TaskStatusDetailID: number;\n    TaskID: number;\n    TaskStatusID: number;\n    UserID: string;\n    Description: string;\n    Taskstatus: TaskStatus;\n    User: any;\n    StatsUpdationDateTimeString: string;\n\n    constructor()\n    {\n        this.TaskStatusDetailID = null;\n        this.TaskID = null;\n        this.TaskStatusID = null;\n        this.Description = null;\n        this.UserID = null;\n        this.Taskstatus = null;\n        this.User = null;\n        this.StatsUpdationDateTimeString = null;\n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [ {provide: NG_VALIDATORS, useExisting: TeamSizeValidatorDirective, multi: true }]\n})\nexport class TeamSizeValidatorDirective implements Validator {\n\n  constructor() { }\n  @Input(\"appTeamSizeValidator\") n : number;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { divisible: { valid: false } }; //indicates invalid\n    }\n  }\n}\n","import { HttpBackend, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterLoggerService {\n  private httpClient: HttpClient;\n  currentUserName: string = null;\n  constructor(private httpBackend: HttpBackend) { }\n\n  public log(logMsg: string): Observable<any> {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post(\"/api/routerlogger\", logMsg, \n    { headers: new HttpHeaders().set(\"content-type\", \"text/plain\") });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService {\n\n   constructor(private router: Router) { }\n  //constructor() { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          //do something with response\n        }\n      },\n      (error: any) => {\n        if (error instanceof HttpErrorResponse) {\n          if (error.status == 401) {\n            console.log(\"401 Un-Authorized Access\" + error);\n            this.router.navigateByUrl(\"/login\");\n          }\n        }\n      }\n    ));\n  }\n}\n","import { trigger, transition, query, style, animate, group, keyframes } from \"@angular/animations\";\r\n\r\nexport const fadeAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ opacity: 0 }),\r\n                    animate(\"0.6s\", style({ opacity: '1' }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ opacity: 1 }),\r\n                    animate(\"0.6s\", style({ opacity: '0' }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\nexport const slideUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"translateY(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"translateY(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"translateY(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"translateY(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n    export const zoomUpAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"scale(0) translateY(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(1) translateY(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"scale(1) translateY(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(0) translateY(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n    export const zoomLeftAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"* <=> *\", [\r\n            query(\":enter, :leave\",\r\n                style({ position: 'absolute', width: '98%' }),\r\n                { optional: true }),\r\n\r\n            group([\r\n\r\n                query(\":enter\", [\r\n                    style({ transform: \"scale(0) translateX(100%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(1) translateX(0%)\" }))\r\n                ], { optional: true }),\r\n\r\n                query(\":leave\", [\r\n                    style({ transform: \"scale(1) translateX(0%)\" }),\r\n                    animate(\"0.6s\", style({ transform: \"scale(0) translateX(-100%)\" }))\r\n                ], { optional: true })\r\n\r\n            ])\r\n        ])\r\n    ]);\r\n\r\n    function slideLeft()\r\n{\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: \"translateX(100%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(0%)\" }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: \"translateX(0%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(-100%)\" }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\nfunction slideRight()\r\n{\r\n    return [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                style({ transform: \"translateX(-100%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(0%)\" }))\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                style({ transform: \"translateX(0%)\" }),\r\n                animate(\"0.6s\", style({ transform: \"translateX(100%)\" }))\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ];\r\n}\r\n\r\nexport const slideLeftOrRightAnimation =\r\n    trigger(\"routeAnimations\", [\r\n        transition(\"0 => 1\", slideLeft()),\r\n        transition(\"0 => 2\", slideLeft()),\r\n        transition(\"0 => 3\", slideLeft()),\r\n        transition(\"0 => 4\", slideLeft()),\r\n        transition(\"0 => 5\", slideLeft()),\r\n        transition(\"0 => 6\", slideLeft()),\r\n\r\n        transition(\"1 => 0\", slideRight()),\r\n        transition(\"1 => 2\", slideLeft()),\r\n        transition(\"1 => 3\", slideLeft()),\r\n        transition(\"1 => 4\", slideLeft()),\r\n        transition(\"1 => 5\", slideLeft()),\r\n        transition(\"1 => 6\", slideLeft()),\r\n\r\n        transition(\"2 => 0\", slideRight()),\r\n        transition(\"2 => 1\", slideRight()),\r\n        transition(\"2 => 3\", slideLeft()),\r\n        transition(\"2 => 4\", slideLeft()),\r\n        transition(\"2 => 5\", slideLeft()),\r\n        transition(\"2 => 6\", slideLeft()),\r\n\r\n        transition(\"3 => 0\", slideRight()),\r\n        transition(\"3 => 1\", slideRight()),\r\n        transition(\"3 => 2\", slideRight()),\r\n        transition(\"3 => 4\", slideLeft()),\r\n        transition(\"3 => 5\", slideLeft()),\r\n        transition(\"3 => 6\", slideLeft()),\r\n\r\n        transition(\"4 => 0\", slideRight()),\r\n        transition(\"4 => 1\", slideRight()),\r\n        transition(\"4 => 2\", slideRight()),\r\n        transition(\"4 => 3\", slideRight()),\r\n        transition(\"4 => 5\", slideLeft()),\r\n        transition(\"4 => 6\", slideLeft()),\r\n\r\n        transition(\"5 => 0\", slideRight()),\r\n        transition(\"5 => 1\", slideRight()),\r\n        transition(\"5 => 2\", slideRight()),\r\n        transition(\"5 => 3\", slideRight()),\r\n        transition(\"5 => 4\", slideRight()),\r\n        transition(\"5 => 6\", slideLeft()),\r\n\r\n        transition(\"6 => 0\", slideRight()),\r\n        transition(\"6 => 1\", slideRight()),\r\n        transition(\"6 => 2\", slideRight()),\r\n        transition(\"6 => 3\", slideRight()),\r\n        transition(\"6 => 4\", slideRight()),\r\n        transition(\"6 => 5\", slideRight()),\r\n    ]);\r\n\r\n    \r\nexport const keyFrameAnimation =\r\ntrigger(\"routeAnimations\", [\r\n    transition(\"* <=> *\", [\r\n        query(\":enter, :leave\",\r\n            style({ position: 'absolute', width: '98%' }),\r\n            { optional: true }),\r\n\r\n        group([\r\n\r\n            query(\":enter\", [\r\n                animate(\"1s\", keyframes([\r\n                    style({ offset: 0, transform: \"scale(0.5) translateX(-100%)\", \"transform-origin\": \"center left\" }),\r\n                    style({ offset: 0.3, transform: \"scale(0.5) translateX(30%)\" }),\r\n                    style({ offset: 0.7, transform: \"scale(0.5) translateX(30%)\" }),\r\n                    style({ offset: 1, transform: \"scale(1) translateX(0%)\" })\r\n                ])),\r\n            ], { optional: true }),\r\n\r\n            query(\":leave\", [\r\n                animate(\"1s\", keyframes([\r\n                    style({ offset: 0, transform: \"scale(1)\", \"transform-origin\": \"center right\" }),\r\n                    style({ offset: 0.3, transform: \"scale(0.5) translateX(0%)\" }),\r\n                    style({ offset: 0.7, transform: \"scale(0.5) translateX(0%)\" }),\r\n                    style({ offset: 1, transform: \"scale(1) translateX(100%)\" })\r\n                ])),\r\n            ], { optional: true })\r\n\r\n        ])\r\n    ])\r\n]);\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TeamSizeValidatorDirective } from '../directives/team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../directives/client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../directives/project-idunique-validator.directive';\nimport { NumberToWordsPipe } from '../pipes/number-to-words.pipe';\nimport { FilterPipe } from '../pipes/filter.pipe';\nimport { PagingPipe } from '../pipes/paging.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ComponentLoaderDirective } from '../directives/componentloader.directive';\nimport { SortPipe } from '../pipes/sort.pipe';\n\n\n@NgModule({\n  declarations: [\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe,\n    FilterPipe,\n    PagingPipe,\n    ComponentLoaderDirective,\n    SortPipe\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective,\n    NumberToWordsPipe,\n    FilterPipe,\n    SortPipe,\n    PagingPipe,\n    ComponentLoaderDirective\n  ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { TasksComponent } from '../employee/components/tasks/tasks.component';\nimport { EmployeeRoutingModule } from '../employee/employee-routing/employee-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { CreateTaskComponent } from './components/create-task/create-task.component';\nimport { EditTaskComponent } from './components/edit-task/edit-task.component';\nimport { UpdateTaskComponent } from './components/update-task/update-task.component';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    CreateTaskComponent,\n    EditTaskComponent,\n    UpdateTaskComponent\n  ],\n  imports: [\n    SharedModule,\n    EmployeeRoutingModule,\n  ],\n  exports:[\n    TasksComponent,\n    CreateTaskComponent,\n    EditTaskComponent,\n    UpdateTaskComponent\n  ]\n})\nexport class EmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CanActivateGuardService } from '../../guards/can-activate-guard.service';\nimport { TasksComponent } from '../components/tasks/tasks.component';\nimport { CreateTaskComponent } from '../components/create-task/create-task.component';\nimport { EditTaskComponent } from '../components/edit-task/edit-task.component';\nimport { UpdateTaskComponent } from '../components/update-task/update-task.component';\n\nconst routes: Routes = [\n  {\n    path: \"\", canActivate: [CanActivateGuardService], data: { expectedRole: \"Employee\" }, children: [\n      {\n        path: \"tasks\", component: TasksComponent, data: { linkIndex: 1 },\n      },\n      {\n        path: \"createtask\", component: CreateTaskComponent, data: { linkIndex: 2 }\n      },\n      {\n        path: \"edittask/:taskid\", component: EditTaskComponent, data: { linkIndex: 3 }\n      },\n      {\n        path: \"updatetaskstatus/:taskid\", component: UpdateTaskComponent, data: { linkIndex: 4 }\n      }\n    ]\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { RouterLoggerService } from './services/router-logger.service';\nimport { LoginService } from './services/login.service';\nimport { fadeAnimation, slideUpAnimation, zoomUpAnimation ,zoomLeftAnimation,slideLeftOrRightAnimation,keyFrameAnimation} from \"./animations/my-animations\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ fadeAnimation ]\n})\nexport class AppComponent {\n  constructor(public loginService: LoginService, private routerLoggerService: RouterLoggerService, private router: Router) {\n   }\n\n   ngOnInit() {\n     this.loginService.detectIfAlreadyLoggedIn();\n    // this.router.events.subscribe((event) => {\n    //   if (event instanceof NavigationEnd) {\n    //     let userName = (this.loginService.currentUserName) ? this.loginService.currentUserName : \"anonymous\";\n    //     let logMsg = new Date().toLocaleDateString() + \": \" + userName + \" navigates to \" + event.url;\n    //     console.log(logMsg);\n    //     this.routerLoggerService.log(logMsg).subscribe();\n    //   }\n    // });\n  }\n\n  onSearchClick() {\n    console.log(this.loginService.currentUserName);\n  }\n  getState(outlet)\n  {\n    return outlet.isActivated? outlet.activatedRoute.snapshot.url[0].path && outlet.activatedRouteData[\"linkIndex\"] : \"none\";\n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n    <a class=\"navbar-brand\" href=\"#\">\n        Angular Task Manager\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mynav\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"mynav\">\n        <ul class=\"navbar-nav mr-auto\">\n            \n            <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Admin'\">\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/admin','dashboard']\">Dashboard</a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/admin','projects']\">Projects</a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName !=null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/admin','masters']\">Masters</a>\n                </li>\n            </ng-container>\n\n            <ng-container *ngIf=\"loginService.currentUserName != null && loginService.currentUserRole == 'Employee'\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" [routerLink]=\" [ '/employee', 'tasks' ] \">Tasks</a>\n                </li>\n            </ng-container>\n\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/about']\">About</a>\n            </li>\n\n            <ng-container *ngIf=\"loginService.currentUserName == null\">\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName == null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/signup']\">Sign Up</a>\n                </li>\n            </ng-container>\n\n            <ng-container *ngIf=\"loginService.currentUserName != null\">\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName==null\">\n                    <a class=\"nav-link\" [routerLink]=\"['/myprofile']\">My Profile</a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"loginService.currentUserName != null\">\n                    <a class=\"nav-link\" (click)=\"loginService.Logout()\">Logout</a>\n                </li>\n            </ng-container>\n\n        </ul>\n\n        <form class=\"form-inline my-2 my-lg-0\">\n            <label class=\"mt-1 mr-2\" *ngIf=\"loginService.currentUserName != null\"\n                [ngStyle]=\"{'color': 'white' }\">Welcome to - {{loginService.currentUserName|lowercase}}</label>\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"search\"><i class=\"fa fa-search\"></i></span>\n                </div>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\n            </div>\n            <button class=\"btn btn-warning my2- my-sm-0\" type=\"button\" (click)=\"onSearchClick()\">Search</button>\n        </form>\n\n    </div>\n</nav>\n\n<div class=\"container-fluid\" [@routeAnimations]=\"getState(outlet)\">\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../../models/login-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void { }\n\n  onLoginClick(event) {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        if (this.loginService.currentUserRole == \"Admin\") {\n          this.router.navigate([\"/admin\", \"dashboard\"]);\n        }\n        else {\n          this.router.navigate([\"/employee\", \"tasks\"]);\n        }\n      }\n      ,\n      (error) => {\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n}\n","<form>\n    <div class=\"row\">\n        <div class=\"col-lg-6 col-xl-5 col-md-9 mx-auto\">\n            <div class=\"card mt-4\">\n                <div class=\"card-header bg-secondary text-white\">\n                    <h3>Login</h3>\n                    <div appAlert [error]=\"loginError\" *ngIf=\"loginError\"></div>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"form-group form-row\">\n                        <label for=\"UserName\" class=\"col-md-4 col-form-label\">Username</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Username\"\n                                [(ngModel)]=\"loginViewModel.UserName\" name=\"UserName\" autofocus=\"autofocus\">\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"Password\" class=\"col-md-4 col-form-label\">Password</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                                [(ngModel)]=\"loginViewModel.Password\" name=\"Password\">\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class=\"card-footer text-right\">\n                    <!-- <span class=\"text-danger\">{{loginError}}&nbsp;</span> -->\n                    <button class=\"btn btn-primary\" (click)=\"onLoginClick($event)\">Login</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Project } from 'src/app/models/project';\nimport { TaskPriority } from 'src/app/models/task-priorities';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProjectsService } from 'src/app/services/projectservice.service';\nimport { TaskPrioritiesService } from 'src/app/services/task-priorities.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.scss']\n})\nexport class CreateTaskComponent implements OnInit {\n\n  newTaskForm: FormGroup;\n  projects: Observable<Project[]>;\n  employees: Observable<any>;\n  taskPriorities: Observable<TaskPriority[]>;\n  \n  constructor(private tasksService: TasksService, private router: Router, private projectsService: ProjectsService, private taskPrioritiesService: TaskPrioritiesService, private loginService: LoginService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.newTaskForm = new FormGroup({\n      TaskID: new FormControl(0),\n      TaskName: new FormControl(null, [ Validators.required ]),\n      Description: new FormControl(null, []),\n      ProjectID: new FormControl(null, [ Validators.required ]),\n      AssignedTo: new FormControl(null, [ Validators.required ]),\n      TaskPriorityID: new FormControl(2, [ Validators.required ])\n    });\n\n    this.projects = this.projectsService.getAllProjects();\n    this.employees = this.loginService.getAllEmployes();\n    this.taskPriorities = this.taskPrioritiesService.getTaskPriorities();\n  }\n\n  onCreateTaskClick(event)\n  {\n    this.newTaskForm[\"submitted\"] = true;\n\n    if (this.newTaskForm.valid)\n    {\n      this.tasksService.insertTask(this.newTaskForm.value).subscribe(() => {\n        this.router.navigate( [ \"/employee\", \"tasks\" ]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else\n    {\n      console.log(this.newTaskForm.errors);\n    }\n  }\n\n}\n","<h1>Create Task</h1>\n<form [formGroup]=\"newTaskForm\" novalidate=\"novalidate\" #CreateForm=\"ngForm\">\n  <div class=\"row\">\n\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"TaskName\" class=\"text-infor\" style=\"font-size:18px\">Task Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"TaskName\" placeholder=\"Task Name\" style=\"font-size:20px\" autofocus=\"autofocus\" formControlName=\"TaskName\">\n\n        <span class=\"text-danger\" *ngIf=\"newTaskForm.get('TaskName').invalid && (newTaskForm.get('TaskName').dirty || newTaskForm.get('TaskName').touched || CreateForm.submitted) && newTaskForm.get('TaskName').errors?.required\">Task Name can't be blank</span>\n      </div>\n    </div>\n\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <label for=\"description\" class=\"text-info\">Description:</label>\n        <textarea class=\"form-control\" id=\"Description\" placeholder=\"Description\" formControlName=\"Description\"></textarea>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n      <div class=\"form-group form-row\">\n        <label for=\"ProjectID\" class=\"text-info col-md-3 col-form-label\">Project:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"ProjectID\" formControlName=\"ProjectID\">\n            <option value=\"null\">Please Select</option>\n\n            <option *ngFor=\"let project of projects | async\" [value]=\"project.ProjectID\">\n              {{project.ProjectName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('ProjectID').invalid && (newTaskForm.get('ProjectID').dirty || newTaskForm.get('ProjectID').touched || CreateForm.submitted) && newTaskForm.get('ProjectID').errors?.required\">Please select project, to which the task belongs to.</span>\n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n        <label for=\"AssignedTo\" class=\"text-info col-md-3 col-form-label\">Assigned To:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"AssignedTo\" formControlName=\"AssignedTo\">\n            <option value=\"null\">Please Select</option>\n\n            <option [value]=\"employee.Id\" *ngFor=\"let employee of employees | async\">\n              {{employee.UserName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('AssignedTo').invalid && (newTaskForm.get('AssignedTo').dirty || newTaskForm.get('AssignedTo').touched || CreateForm.submitted) && newTaskForm.get('AssignedTo').errors?.required\">Select the employee, to whom the task id assigned.</span>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n      <div class=\"form-group form-row\">\n        <label for=\"TaskPriorityID\" class=\"text-info col-md-3 col-form-label\">Priority:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"TaskPriorityID\" formControlName=\"TaskPriorityID\">\n            <option value=\"null\">Please Select</option>\n\n            <option [value]=\"taskPriority.TaskPriorityID\" *ngFor=\"let taskPriority of taskPriorities | async\">\n              {{taskPriority.TaskPriorityName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"newTaskForm.get('TaskPriorityID').invalid && (newTaskForm.get('TaskPriorityID').dirty || newTaskForm.get('TaskPriorityID').touched || CreateForm.submitted) && newTaskForm.get('TaskPriorityID').errors?.required\">Select the employee, to whom the task id assigned.</span>\n      \n        </div>\n      </div>\n\n      <div class=\"form-group form-row\">\n          <label for=\"TaskStatus\" class=\"text-info col-md-3 col-form-label\">Status:</label>\n          <div class=\"col-md-9\">\n            <input type=\"text\" class=\"form-control-plaintext\" id=\"TaskStatus\" placeholder=\"Task Status\" value=\"Holding\" readonly=\"readonly\">\n          </div>\n        </div>\n    </div>\n\n\n    <div class=\"col-lg-12 border-top text-center\">\n      <div>\n        <button class=\"btn btn-success btn-lg mt-2\" (click)=\"onCreateTaskClick($event)\">Create Task</button>\n      </div>\n      <a class=\"btn btn-info btn-sm mt-1\" [routerLink]=\" [ '/employee', 'tasks' ] \">Back to Tasks</a>\n    </div>\n\n  </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { GroupedTask } from 'src/app/models/grouped-task';\nimport { LoginService } from 'src/app/services/login.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n  taskGroups: GroupedTask[];\n  constructor(private tasksService: TasksService, public loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.tasksService.getTasks().subscribe((response) => {\n      this.taskGroups = response;\n    });\n  }\n  /* Get background color based on task status */\n  getTaskGroupBgCssClass(taskStatusName) : string\n  {\n    var className;\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"bg-secondary text-white\"; break;\n      case \"Prioritized\": className = \"bg-primary text-white\"; break;\n      case \"Started\": className = \"bg-info text-white\"; break;\n      case \"Finished\": className = \"bg-success text-white\"; break;\n      case \"Reverted\": className = \"bg-danger text-white\"; break;\n    }\n    return className;\n  }\n\n  /* Get background color based on task priority */\n  getTaskPriorityBadgeCssClass(taskPriorityName) : string\n  {\n    var className;\n    switch (taskPriorityName)\n    {\n      case \"Urgent\": className = \"badge-danger\"; break;\n      case \"Normal\": className = \"badge-primary\"; break;\n      case \"Below Normal\": className = \"badge-info\"; break;\n      case \"Low\": className = \"badge-secondary\"; break;\n    }\n    return className;\n  }\n\n  /* Get text color based on task status */\n  getTaskGroupTextCssClass(taskStatusName) : string\n  {\n    var className;\n    switch (taskStatusName)\n    {\n      case \"Holding\": className = \"text-secondary\"; break;\n      case \"Prioritized\": className = \"text-primary\"; break;\n      case \"Started\": className = \"text-info\"; break;\n      case \"Finished\": className = \"text-success\"; break;\n      case \"Reverted\": className = \"text-danger\"; break;\n    }\n    return className;\n  }\n}\n","<h1>Tasks</h1>\n<a [routerLink]=\" [ '/employee', 'createtask' ] \" class=\"btn btn-primary\">Create Task</a>\n\n\n<div class=\"row mt-1 mb-2\">\n\n    <div class=\"col-lg-6 mb-1\" *ngFor=\"let taskGroup of taskGroups\">\n        <div class=\"card card-primary\">\n\n            <div class=\"card-header\" [ngClass]=\"getTaskGroupBgCssClass(taskGroup.TaskStatusName)\">\n                <div class=\"card-title\">\n                    <h4>\n                        {{taskGroup.TaskStatusName}}\n                        <span class=\"badge badge-warning float-right\">\n                            {{taskGroup.Tasks.length}}\n                        </span>\n                    </h4>\n                </div>\n            </div>\n\n            <div class=\"card-body\">\n\n                <div class=\"card mb-1\" *ngFor=\"let task of taskGroup.Tasks; let i = index\">\n\n                    <div class=\"card-header\" >\n                        #{{i + 1}} &nbsp;&nbsp; {{task.TaskName}}\n\n                        <div class=\"badge float-right mr-1 badge-primary\" style=\"font-size:15px\" [ngClass]=\"getTaskPriorityBadgeCssClass(task.TaskPriority?.TaskPriorityName)\">\n                            {{task.TaskPriority?.TaskPriorityName}}\n                        </div>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <div>{{task.Description}}</div>\n\n                        <div>\n                            <table class=\"table table-sm table-borderless\">\n                                <tr>\n                                    <td>Created:</td>\n                                    <td>\n                                        <i class=\"fa fa-user\"></i>\n                                        {{task.CreatedByUser?.UserName}}\n                                        &nbsp;&nbsp;&nbsp;\n                                        <i class=\"fa fa-calendar\"></i>\n                                        {{task.CreatedOnString}}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Assigned to:</td>\n                                    <td>\n                                        <i class=\"fa fa-user-o\"></i>\n                                        {{task.AssignedToUser?.UserName}}\n                                    </td>\n                                </tr>\n\n                                <tr>\n                                    <td>Project:</td>\n                                    <td>\n                                        <i class=\"fa fa-briefcase\"></i>\n                                        {{task.Project?.ProjectName}} -\n                                        {{task.Project?.ClientLocation?.ClientLocationName}}\n                                    </td>\n                                </tr>\n                            </table>\n\n                            <table class=\"table table-sm table-bordered\">\n                                <thead class=\"table-light\">\n                                    <th>Date</th>\n                                    <th>Status</th>\n                                    <th>User</th>\n                                    <th>Description</th>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let taskStatusDetail of task.TaskStatusDetails\">\n                                        <td>\n                                            <i class=\"fa fa-calendar\"></i>\n                                            {{taskStatusDetail?.StatusUpdationDateTimeString}}\n                                        </td>\n                                        <td class=\"text-primary\" [ngClass]=\"getTaskGroupTextCssClass(taskStatusDetail?.TaskStatus?.TaskStatusName)\">\n                                            {{taskStatusDetail?.TaskStatus?.TaskStatusName}}\n                                        </td>\n                                        <td>\n                                            <i class=\"fa fa-user\"></i>\n                                            {{taskStatusDetail?.User?.UserName}}\n                                        </td>\n                                        <td>\n                                            {{taskStatusDetail?.Description}}\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <div class=\"btn-group\">\n                            <a [routerLink]=\" [ '/employee', 'updatetaskstatus', task.TaskID ] \"\n                                class=\"btn btn-sm btn-outline-secondary\">\n                                <i class=\"fa fa-pencil\"></i>\n                                Change Status\n                            </a>\n\n                            <a [routerLink]=\" [ '/employee', 'edittask', task.TaskID ] \"\n                                class=\"btn btn-sm btn-outline-secondary\"\n                                *ngIf=\"task.CreatedByUser?.UserName == loginService.currentUserName\">\n                                <i class=\"fa fa-pencil-square-o\"></i>\n                                Edit\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LoginService } from '../services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService {\n\n  constructor(private loginService:LoginService) { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value)\n        return null; //return, if the date of birth is null\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge)\n        return null; //valid\n      else\n        return { minAge: { valid: false } }; //invalid\n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn\n  {\n    return (formGroup: FormGroup): ValidationErrors | null =>\n    {\n      if (!formGroup.get(controlToValidate).value)\n        return null; //return, if the confirm password is null\n\n      if (formGroup.get(controlToValidate).value == formGroup.get(controlToCompare).value)\n        return null; //valid\n      else\n      {\n        formGroup.get(controlToValidate).setErrors( { compareValidator: { valid: false }});\n        return { compareValidator: { valid: false } }; //invalid\n      }\n    };\n  }\n  public DuplicateEmailValidator(): AsyncValidatorFn\n  {\n    return (control: AbstractControl): Observable<ValidationErrors | null> =>\n    {\n      return this.loginService.getUserByEmail(control.value).pipe(map((existingUser: any) =>\n      {\n        if (existingUser != null)\n        {\n          return { uniqueEmail: { valid: false } }; //invalid\n        }\n        else\n        {\n          return null;\n        }\n      }));\n    };\n  }\n}\n","export class LoginViewModel\n{\n    UserName: string;\n    Password: string;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from \"@auth0/angular-jwt\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { JwtInterceptorService } from './interceptors/jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './interceptors/jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { AlertDirective } from './directives/alert.directive';\nimport { EmployeeModule } from './employee/employee.module';\nimport { SharedModule } from './shared/shared.module';\nimport { AboutComponent } from './admin/components/about/about.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    LoginComponent,\n    SignUpComponent,\n    AlertDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    AppRoutingModule,\n    EmployeeModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return (sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")).Token : null)\n        }\n      }\n    })\n  ],\n  // exports: [],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appComponentLoader]'\n})\nexport class ComponentLoaderDirective\n{\n  constructor(public viewContainerRef: ViewContainerRef)\n  {\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    var currentUser = { Token: \"\" };\n    if (sessionStorage.currentUser != null) {\n      currentUser = JSON.parse(sessionStorage.currentUser);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.Token\n      }\n    }\n    );\n\n    return next.handle(request);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: any[], sortBy: string, sortOrder: string): any\n  {\n    if (value == null)\n    {\n      return null;\n    }\n\n    value.sort(function(a, b) {\n      //less than 0        :   a comes before b\n      //greater than 0  :   b comes before a\n      //equal to 0         :   a and b are left unchanged\n\n      if (a[sortBy] && b[sortBy])\n      {\n        return a[sortBy].toString().toLowerCase()[0] - b[sortBy].toString().toLowerCase()[0];\n\n        //a = cat  --> 99\n        //b = dog --> 100\n        //99 - 100 = -1     --> less than 0        :   a comes before b\n      }\n      else\n      {\n        return 0;\n      }\n    });\n\n    if (sortOrder == \"DESC\")\n    {\n      value.reverse();\n    }\n\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'numberToWords'\n})\nexport class NumberToWordsPipe implements PipeTransform {\n\n  transform(value: any,separator:string=\", \"): any {\n    if (value == null)\n    {\n      return null;\n    }\n    else\n    {\n      return this.inWords(value,separator);\n    }\n  }\n  private inWords = (n, separator) =>\n  {\n    let a = [\n      '', 'One', 'Two', 'Three', 'Four',\n      'Five', 'Six', 'Seven', 'Eight', 'Nine',\n      'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen',\n      'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'\n    ];\n\n    let b = [\n      '', '', 'Twenty', 'Thirty', 'Forty',\n      'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'\n    ];\n\n    let g = [\n      '', 'Thousand', 'Million', 'Billion', 'Trillion', 'Quadrillion',\n      'Quintillion', 'Sextillion', 'Septillion', 'Octillion', 'Nonillion'\n    ];\n\n    const arr = x => Array.from(x);\n    const num = x => Number(x) || 0;\n    const str = x => String(x);\n    const isEmpty = xs => xs.length === 0;\n    const take = n => xs => xs.slice(0, n);\n    const drop = n => xs => xs.slice(n);\n    const reverse = xs => xs.slice(0).reverse();\n    const comp = f => g => x => f(g(x));\n    const not = x => !x;\n    const chunk = n => xs =>\n      isEmpty(xs) ? [] : [take(n)(xs), ...chunk(n)(drop(n)(xs))];\n\n    let makeGroup = ([ones, tens, huns]) =>\n    {\n      return [\n        num(huns) === 0 ? '' : a[huns] + ' Hundred ',\n        num(ones) === 0 ? b[tens] : b[tens] && b[tens] + '-' || '',\n        a[tens + ones] || a[ones]\n      ].join('');\n    };\n\n    let thousand = (group, i) => group === '' ? group : `${group} ${g[i]}`;\n\n    if (typeof n === 'number')\n      return this.inWords(str(n), separator);\n    else if (n === '0')\n      return 'Zero';\n    else\n      return comp(chunk(3))(reverse)(arr(n))\n        .map(makeGroup)\n        .map(thousand)\n        .filter(comp(not)(isEmpty))\n        .reverse()\n        .join(separator);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>About</h1>\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Task } from 'src/app/models/task';\nimport { TaskStatus } from 'src/app/models/task-status';\nimport { TaskStatusDetail } from 'src/app/models/task-status-detail';\nimport { TaskStatusesService } from 'src/app/services/task-statuses.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-update-task',\n  templateUrl: './update-task.component.html',\n  styleUrls: ['./update-task.component.scss']\n})\nexport class UpdateTaskComponent implements OnInit {\n  //Properties to represent taskstatusdetails\n  taskID: number;\n  currentTask: Task = new Task();\n  currentTaskStatusDetail: TaskStatusDetail = new TaskStatusDetail();\n  editTaskStatusForm: FormGroup;\n  taskStatuses: Observable<TaskStatus[]>;\n\n  constructor(private tasksService: TasksService, private router: Router, private taskStatuesService: TaskStatusesService, private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    //Receive taskid parameter\n    this.activatedRoute.params.subscribe((params) => {\n      this.taskID = params[\"taskid\"];\n    });\n\n    //Create reactive form\n    this.editTaskStatusForm = new FormGroup({\n      thisStatusDetailID: new FormControl(0),\n      taskID: new FormControl(null),\n      taskStatusID: new FormControl(null, [Validators.required]),\n      description: new FormControl(null)\n    });\n\n    //get taskstatuses from db for dropdownlist\n    this.taskStatuses = this.taskStatuesService.getTaskStatus();\n    //get task by taskid\n    this.tasksService.getTaskByTaskID(this.taskID).subscribe((task: Task) => {\n      this.currentTask = task;\n\n      //Load task details into Reactive form\n      this.currentTaskStatusDetail.TaskID = this.taskID;\n      this.currentTaskStatusDetail.Description = null;\n      this.currentTaskStatusDetail.TaskStatusID = task.CurrentTaskStatusID;\n      this.currentTaskStatusDetail.TaskStatusDetailID = 0;\n      this.editTaskStatusForm.patchValue(this.currentTaskStatusDetail);\n    });\n  }\n\n  onUpdateTaskStatusClick(event) {\n    this.editTaskStatusForm[\"submitted\"] = true;\n\n    if (this.editTaskStatusForm.valid) {\n      //send REST-API call to server\n      this.tasksService.updateTaskStatus(this.editTaskStatusForm.value).subscribe((response) => {\n        this.router.navigate([\"/employee\", \"tasks\"]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else {\n      console.log(this.editTaskStatusForm.errors);\n    }\n  }\n}\n","<h1>Update Task Status</h1>\n<form [formGroup]=\"editTaskStatusForm\" novalidate=\"novalidate\"  #edit=\"ngForm\">\n\n  <div class=\"row\">\n\n    <div class=\"col-12\">\n      <table class=\"table table-sm table-borderless\">\n        <tr>\n          <td style=\"width:65px\">Created:</td>\n          <td>\n            <i class=\"fa fa-user\"></i>\n            {{currentTask.CreatedByUser?.UserName}}\n            &nbsp;&nbsp;&nbsp;\n            <i class=\"fa fa-calendar\"></i>\n            {{currentTask.CreatedOnString}}\n          </td>\n\n          <td class=\"text-right\">Last Updated on:</td>\n          <td>\n            <i class=\"fa fa-calendar-check-o\"></i>\n            {{currentTask.LastUpdatedOnString}}\n          </td>\n        </tr>\n      </table>\n    </div>\n\n    <div class=\"col-lg-12\">\n      <div class=\"form-group\">\n        <label for=\"Description\" class=\"text-info\">Description:</label>\n        <textarea class=\"form-control\" id=\"Description\" placeholder=\"Description\" formControlName=\"Description\"></textarea>\n      </div>\n    </div>\n\n    <div class=\"col-lg-6\">\n\n      <div class=\"form-group form-row\">\n        <label for=\"taskStatusID\" class=\"text-info col-md-3 col-form-label\">Status:</label>\n        <div class=\"col-md-9\">\n          <select class=\"form-control\" id=\"taskStatusID\" formControlName=\"TaskStatusID\">\n            <option value=\"null\">Please Select</option>\n\n            <option *ngFor=\"let taskStatus of taskStatuses | async\" [value]=\"taskStatus.TaskStatusID\">\n              {{taskStatus.TaskStatusName}}\n            </option>\n          </select>\n\n          <span class=\"text-danger\" *ngIf=\"editTaskStatusForm.get('TaskStatusID').invalid && (editTaskStatusForm.get('TaskStatusID').dirty || editTaskStatusForm.get('TaskStatusID').touched || edit.submitted) && editTaskStatusForm.get('TaskStatusID').errors?.required\">\n            Please select current task status\n          </span>\n        </div>\n      </div>\n\n    </div>\n\n    <div class=\"col-lg-12 border-top text-center\">\n      <div>\n        <button class=\"btn btn-success btn-lg mt-2\" (click)=\"onUpdateTaskStatusClick($event)\">Update Task Status</button>\n      </div>\n      <div>\n        <a [routerLink]=\" [ '/employee', 'tasks' ] \" class=\"btn btn-info btn-sm mt-1\">Back to Tasks</a>\n      </div>\n    </div>\n\n  </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EditTask } from 'src/app/models/edit-task';\nimport { Project } from 'src/app/models/project';\nimport { TaskPriority } from 'src/app/models/task-priorities';\nimport { LoginService } from 'src/app/services/login.service';\nimport { ProjectsService } from 'src/app/services/projectservice.service';\nimport { TaskPrioritiesService } from 'src/app/services/task-priorities.service';\nimport { TasksService } from 'src/app/services/tasks.service';\n\n@Component({\n  selector: 'app-edit-task',\n  templateUrl: './edit-task.component.html',\n  styleUrls: ['./edit-task.component.scss']\n})\nexport class EditTaskComponent implements OnInit {\n  //Properties to represent taskstatusdetails\n  taskID: number;\n  currentTask: EditTask = new EditTask();\n  editTaskStatusForm: FormGroup;\n\n  projects: Observable<Project[]>;\n  employees: Observable<any>;\n  taskPriorities: Observable<TaskPriority[]>;\n\n  constructor(private tasksService: TasksService, private router: Router, private activatedRoute: ActivatedRoute, private projectsService: ProjectsService, private taskPrioritiesService: TaskPrioritiesService, private loginService: LoginService) {\n  }\n\n  ngOnInit() {\n    //Receive taskid parameter\n    this.activatedRoute.params.subscribe((params) => {\n      this.taskID = params[\"taskid\"];\n      console.log(\"QueruStringTaskId = \" + this.taskID);\n    });\n    this.projects = this.projectsService.getAllProjects();\n    this.employees = this.loginService.getAllEmployes();\n    this.taskPriorities = this.taskPrioritiesService.getTaskPriorities();\n    //Create reactive form\n    this.editTaskStatusForm = new FormGroup({\n      TaskID: new FormControl(null),\n      TaskName: new FormControl(null, [Validators.required]),\n      Description: new FormControl(null),\n      ProjectID: new FormControl(null, [Validators.required]),\n      AssignedTo: new FormControl(null, [Validators.required]),\n      TaskPriorityID: new FormControl(null, [Validators.required]),\n      CurrentStatus: new FormControl(null),\n    });\n\n    //get task by taskid\n    this.tasksService.editTaskByTaskID(this.taskID).subscribe((task: EditTask) => {\n      console.log(\"editTaskByTaskID Ts page on load  = \" + task);\n\n      //Load task details into Reactive form\n      this.currentTask.TaskID = this.taskID;\n      this.currentTask.TaskName = task.TaskName;\n      this.currentTask.Description = task.Description;\n      this.currentTask.ProjectID = task.ProjectID;\n      this.currentTask.AssignedTo = task.AssignedTo;\n      this.currentTask.TaskPriorityID=task.TaskPriorityID;\n      this.currentTask.CurrentStatus = task.CurrentStatus;\n      this.editTaskStatusForm.patchValue(this.currentTask);\n    });\n  }\n\n  onUpdateTaskStatusClick(event) {\n    this.editTaskStatusForm[\"submitted\"] = true;\n    if (this.editTaskStatusForm.valid) {\n      //send REST-API call to server\n      this.tasksService.updateTaskById(this.editTaskStatusForm.value).subscribe((response) => {\n        this.router.navigate([\"/employee\", \"tasks\"]);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n    else {\n      console.log(this.editTaskStatusForm.errors);\n    }\n  }\n}\n","<h1>Edit Task</h1>\n<form [formGroup]=\"editTaskStatusForm\" novalidate=\"novalidate\" #CreateForm=\"ngForm\">\n    <div class=\"row\">\n\n        <div class=\"col-12\">\n            <input type=\"hidden\" id=\"TaskID\" formControlName=\"TaskID\">\n            <div class=\"form-group\">\n                <label for=\"TaskName\" class=\"text-infor\" style=\"font-size:18px\">Task Name:</label>\n                <input type=\"text\" class=\"form-control\" id=\"TaskName\" placeholder=\"Task Name\" style=\"font-size:20px\"\n                    autofocus=\"autofocus\" formControlName=\"TaskName\">\n\n                <span class=\"text-danger\"\n                    *ngIf=\"editTaskStatusForm.get('TaskName').invalid && (editTaskStatusForm.get('TaskName').dirty || editTaskStatusForm.get('TaskName').touched || CreateForm.submitted) && editTaskStatusForm.get('TaskName').errors?.required\">Task\n                    Name can't be blank</span>\n            </div>\n        </div>\n\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <label for=\"description\" class=\"text-info\">Description:</label>\n                <textarea class=\"form-control\" id=\"Description\" placeholder=\"Description\"\n                    formControlName=\"Description\"></textarea>\n            </div>\n        </div>\n\n        <div class=\"col-lg-6\">\n            <div class=\"form-group form-row\">\n                <label for=\"ProjectID\" class=\"text-info col-md-3 col-form-label\">Project:</label>\n                <div class=\"col-md-9\">\n                    <select class=\"form-control\" id=\"ProjectID\" formControlName=\"ProjectID\">\n                        <option value=\"null\">Please Select</option>\n\n                        <option *ngFor=\"let project of projects | async\" [value]=\"project.ProjectID\">\n                            {{project.ProjectName}}\n                        </option>\n                    </select>\n\n                    <span class=\"text-danger\"\n                        *ngIf=\"editTaskStatusForm.get('ProjectID').invalid && (editTaskStatusForm.get('ProjectID').dirty || editTaskStatusForm.get('ProjectID').touched || CreateForm.submitted) && editTaskStatusForm.get('ProjectID').errors?.required\">Please\n                        select project, to which the task belongs to.</span>\n                </div>\n            </div>\n\n            <div class=\"form-group form-row\">\n                <label for=\"AssignedTo\" class=\"text-info col-md-3 col-form-label\">Assigned To:</label>\n                <div class=\"col-md-9\">\n                    <select class=\"form-control\" id=\"AssignedTo\" formControlName=\"AssignedTo\">\n                        <option value=\"null\">Please Select</option>\n\n                        <option [value]=\"employee.Id\" *ngFor=\"let employee of employees | async\">\n                            {{employee.UserName}}\n                        </option>\n                    </select>\n\n                    <span class=\"text-danger\"\n                        *ngIf=\"editTaskStatusForm.get('AssignedTo').invalid && (editTaskStatusForm.get('AssignedTo').dirty || editTaskStatusForm.get('AssignedTo').touched || CreateForm.submitted) && editTaskStatusForm.get('AssignedTo').errors?.required\">Select\n                        the employee, to whom the task id assigned.</span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-lg-6\">\n            <div class=\"form-group form-row\">\n                <label for=\"TaskPriorityID\" class=\"text-info col-md-3 col-form-label\">Priority:</label>\n                <div class=\"col-md-9\">\n                    <select class=\"form-control\" id=\"TaskPriorityID\" formControlName=\"TaskPriorityID\">\n                        <option value=\"null\">Please Select</option>\n\n                        <option [value]=\"taskPriority.TaskPriorityID\"\n                            *ngFor=\"let taskPriority of taskPriorities | async\">\n                            {{taskPriority.TaskPriorityName}}\n                        </option>\n                    </select>\n\n                    <span class=\"text-danger\"\n                        *ngIf=\"editTaskStatusForm.get('TaskPriorityID').invalid && (editTaskStatusForm.get('TaskPriorityID').dirty || editTaskStatusForm.get('TaskPriorityID').touched || CreateForm.submitted) && editTaskStatusForm.get('TaskPriorityID').errors?.required\">Select\n                        the employee, to whom the task id assigned.</span>\n\n                </div>\n            </div>\n\n            <div class=\"form-group form-row\">\n                <label for=\"TaskStatus\" class=\"text-info col-md-3 col-form-label\">Status:</label>\n                <div class=\"col-md-9\">\n                    <input type=\"text\" class=\"form-control-plaintext\" id=\"CurrentStatus\" readonly=\"readonly\" formControlName=\"CurrentStatus\" >\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col-lg-12 border-top text-center\">\n            <div>\n                <button class=\"btn btn-success btn-lg mt-2\" (click)=\"onUpdateTaskStatusClick($event)\">Update Task</button>\n            </div>\n            <a class=\"btn btn-info btn-sm mt-1\" [routerLink]=\" [ '/employee', 'tasks' ] \">Back to Tasks</a>\n        </div>\n\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { EditTask } from '../models/edit-task';\nimport { GroupedTask } from '../models/grouped-task';\nimport { Task } from '../models/task';\nimport { TaskStatusDetail } from '../models/task-status-detail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n  getTasks(): Observable<GroupedTask[]> {\n    return this.httpClient.get<GroupedTask[]>(\"/api/tasks\", { responseType: \"json\" });\n  }\n  insertTask(newTask: Task): Observable<Task> {\n    return this.httpClient.post<Task>(\"/api/createtask\", newTask, { responseType: \"json\" });\n  }\n  updateTaskById(editTask: EditTask): Observable<EditTask> {\n    return this.httpClient.post<EditTask>(\"/api/updatetaskbyid\", editTask, { responseType: \"json\" });\n  }\n  getTaskByTaskID(TaskID: number): Observable<Task> {\n    return this.httpClient.get<Task>(\"/api/tasks/searchbytaskid/\" + TaskID, { responseType: \"json\" });\n  }\n  editTaskByTaskID(TaskID: number): Observable<EditTask> {\n    return this.httpClient.get<EditTask>(\"/api/tasks/editTaskByID/\" + TaskID, { responseType: \"json\" });\n  }\n  updateTaskStatus(taskStatusDetail: TaskStatusDetail): Observable<TaskStatusDetail> {\n    return this.httpClient.put<TaskStatusDetail>(\"/api/updatetaskstatus\", taskStatusDetail, { responseType: \"json\" });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Project } from '../models/project';\n\n@Pipe({\n  name: 'paging'\n})\nexport class PagingPipe implements PipeTransform {\n\n  transform(value: Project[], currentPageIndex: number, pageSize: number): unknown {\n    if (value == null) {\n      return null;\n    }\n    let resultArrary = [];\n    for (let i = currentPageIndex * pageSize; i < (currentPageIndex + 1) * pageSize; i++) {\n      if (value[i]) {\n        resultArrary.push(value[i]);\n      }\n    }\n    return resultArrary;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { CountriesService } from '../../services/countries.service';\nimport { Country } from '../../models/country';\nimport { CustomValidatorsService } from '../../directives/custom-validators.service';\nimport { SignUpViewModel } from '../../models/sign-up-view-model';\nimport { LoginService } from '../../services/login.service';\nimport { Router } from '@angular/router';\nimport { CanComponentDeactivate } from '../../guards/can-deactivate-guard.service';\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit, CanComponentDeactivate {\n\n  signUpForm: FormGroup;\n  genders = [\"Male\", \"Female\"];\n  countries: Country[] = [];\n  registerError: string = null;\n\n  constructor(private countryService: CountriesService, private formBuilder: FormBuilder,\n    private customValidatorsService: CustomValidatorsService, private loginService: LoginService, private router: Router) {\n\n  }\n  canLeave: boolean;\n\n  ngOnInit() {\n    this.countryService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n        lastName: [null, [Validators.required, Validators.minLength(3), Validators.maxLength(100)]],\n      }),\n      email: [null, [Validators.required, Validators.email, Validators.maxLength(100)], [this.customValidatorsService.DuplicateEmailValidator()]],\n      // mobile: [null, [Validators.required, Validators.min(10), Validators.max(10), Validators.pattern(/^[0-9]*$/)]],\n      mobile: [null, [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required, Validators.maxLength(100)]],\n      confirmPassword: [null, [Validators.required, Validators.maxLength(100)]],\n      gender: [null, [Validators.required]],\n      countryId: [null, [Validators.required]],\n      receiveNewsLetters: [''],\n      // skills: this.formBuilder.array([ this.createItem() ])\n      skills: this.formBuilder.array([])\n    }\n      , {\n        validators: [\n          this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n        ]\n      }\n    );\n    //For get all values of SignUpForm at the time of filling\n    this.signUpForm.valueChanges.subscribe((value) => {\n      //console.log(value);\n      //this.canLeave = false;\n    });\n  }\n  createItem(): FormGroup {\n    return this.formBuilder.group({\n      skillName: null,\n      level: null\n    });\n  }\n  onSubmitClick() {\n    //Display current form value\n    this.signUpForm[\"submitted\"] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe(\n        (response) => {\n          this.canLeave = true;\n          this.router.navigate([\"/employee\", \"tasks\"]);\n        },\n        (error) => {\n          console.log(error);\n          this.registerError = \"Unable to submit\";\n        });\n    }\n\n    //setValue\n    // this.signUpForm.setValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\",\n    //   mobile: \"9876543210\",\n    //   dateOfBirth: \"2020-01-01\",\n    //   gender: \"male\",\n    //   countryID: 3,\n    //   receiveNewsLetters: true\n    // });\n\n    //patchValue\n    // this.signUpForm.patchValue({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n\n    //reset\n    // this.signUpForm.reset();\n\n    //reset with Parameters\n    // this.signUpForm.reset({\n    //   firstName: \"Adam\",\n    //   lastName: \"Smith\",\n    //   email: \"smith@gmail.com\"\n    // });\n  }\n  onAddSkill() {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null),\n      level: new FormControl(null)\n    });\n\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n    // this.skills = this.signUpForm.get('skills') as FormArray;\n    // this.skills.push(this.createItem());\n  }\n\n  onRemoveClick(index: number) {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 col-xl-6 mx-auto\">\n        <form [formGroup]=\"signUpForm\" #formDir=\"ngForm\" (ngSubmit)=\"onSubmitClick()\">\n            <div class=\"card mt-1\">\n                <div class=\"card-header\">\n                    <h4>Sign Up</h4>\n                </div>\n                <div class=\"card-body\">\n\n                    <div class=\"form-group form-row\" formGroupName=\"personName\">\n                        <label for=\"firstName\" class=\"col-md-4 col-form-label\">First Name:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"First Name\"\n                                class=\"form-control\" formControlName=\"firstName\"\n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || formDir.submitted),\n                                'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || formDir.submitted) }\">\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || formDir.submitted) && signUpForm.get('personName.firstName').errors?.required\">First\n                                name can't be blank</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || formDir.submitted) && signUpForm.get('personName.firstName').errors?.minlength\">First\n                                name should contain at least 2 characters</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\" formGroupName=\"personName\">\n                        <label for=\"lastName\" class=\"col-md-4 col-form-label\">Last Name:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Last Name\"\n                                class=\"form-control\" formControlName=\"lastName\"\n                                [ngClass]=\"{'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || formDir.submitted),\n                                'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || formDir.submitted) }\">\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || formDir.submitted) && signUpForm.get('personName.lastName').errors?.required\">Last\n                                name can't be blank</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || formDir.submitted) && signUpForm.get('personName.lastName').errors?.minlength\">Last\n                                name should contain at least 2 characters</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"email\" class=\"col-md-4 col-form-label\">Email:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" class=\"form-control\"\n                                formControlName=\"email\"\n                                [ngClass]=\"{ 'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || formDir.submitted),\n                                'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || formDir.submitted) }\">\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || formDir.submitted) && signUpForm.get('email').errors?.required\">Email\n                                can't be blank</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || formDir.submitted) && signUpForm.get('email').errors?.email\">Email\n                                is invalid</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || formDir.submitted) && signUpForm.get('email').errors?.uniqueEmail\">Email\n                                already exists</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"mobile\" class=\"col-md-4 col-form-label\">Mobile:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"text\" name=\"mobile\" id=\"mobile\" placeholder=\"Mobile\" class=\"form-control\"\n                                formControlName=\"mobile\"\n                                [ngClass]=\"{ 'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || formDir.submitted),\n                                'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || formDir.submitted) }\">\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || formDir.submitted) && signUpForm.get('mobile').errors?.required\">Mobile\n                                can't be blank</span>\n                            <!-- <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched ) && signUpForm.get('mobile').errors?.pattern\">Mobile\n                                is invalid</span> -->\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"dateOfBirth\" class=\"col-md-4 col-form-label\">Date of Birth:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"date\" name=\"dateOfBirth\" id=\"dateOfBirth\" placeholder=\"Date of Birth\"\n                                class=\"form-control\" formControlName=\"dateOfBirth\"\n                                [ngClass]=\"{\n                                    'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || formDir.submitted),\n                                    'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || formDir.submitted) }\">\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || formDir.submitted) && signUpForm.get('dateOfBirth').errors?.required\">Date\n                                of Birth can't be blank</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || formDir.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\">Minimum\n                                Age must be 18</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"password\" class=\"col-md-4 col-form-label\">Password:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\"\n                                class=\"form-control\" formControlName=\"password\"\n                                [ngClass]=\"{\n                            'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || formDir.submitted),\n            \n                            'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || formDir.submitted) }\">\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || formDir.submitted) && signUpForm.get('password').errors?.required\">Password\n                                can't be blank</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"confirmPassword\" class=\"col-md-4 col-form-label\">Confirm Password:</label>\n                        <div class=\"col-md-8\">\n                            <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\"\n                                placeholder=\"Confirm Password\" class=\"form-control\" formControlName=\"confirmPassword\"\n                                [ngClass]=\"{\n                            'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || formDir.submitted),\n            \n                            'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || formDir.submitted) }\">\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || formDir.submitted) && signUpForm.get('confirmPassword').errors?.required\">Confirm\n                                Password can't be blank</span>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || formDir.submitted) && signUpForm.get('confirmPassword').errors?.compareValidator\">Password\n                                and Confirm Password do not match</span>\n                        </div>\n                    </div>\n\n                    <!-- This is example for static radio button bind  -->\n                    <!-- <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\">Gender:</label>\n                        <div class=\"col-md-8\">\n\n                            <div class=\"form-check-label form-check-inline\">\n                                <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" class=\"form-check-input\"\n                                    formControlName=\"gender\">\n                                <label for=\"male\" class=\"form-check-label\">Male</label>\n                            </div>\n\n                            <div class=\"form-check-label form-check-inline\">\n                                <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" class=\"form-check-input\"\n                                    formControlName=\"gender\">\n                                <label for=\"female\" class=\"form-check-label\">Female</label>\n                            </div>\n\n                        </div>\n                    </div> -->\n\n                    <!-- This is example for dynamic radio button bind  -->\n                    <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\">Gender:</label>\n                        <div class=\"col-md-8\">\n                            <div class=\"form-check-label form-check-inline\" *ngFor=\"let gender of genders\">\n                                <input type=\"radio\" name=\"gender\" [id]=\"gender\" [value]=\"gender\"\n                                    class=\"form-check-input\" formControlName=\"gender\">\n                                <label [for]=\"gender\" class=\"form-check-label\">{{gender}}</label>\n\n                                <span class=\"text-danger\"\n                                    *ngIf=\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || formDir.submitted) && signUpForm.get('gender').errors?.required\">Please\n                                    select gender</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label for=\"CountryId\" class=\"col-md-4 col-form-label\">Country:</label>\n                        <div class=\"col-md-8\">\n                            <select name=\"countryId\" id=\"countryId\" class=\"form-control\" formControlName=\"countryId\"\n                                [ngClass]=\"{\n                                'is-invalid': signUpForm.get('countryId').invalid && (signUpForm.get('countryId').dirty || signUpForm.get('countryId').touched || formDir.submitted),\n                                'is-valid': signUpForm.get('countryId').valid && (signUpForm.get('countryId').dirty || signUpForm.get('countryId').touched || formDir.submitted) }\">\n\n                                <option value=\"null\">Please Select </option>\n                                <option *ngFor=\"let country of countries\" [value]=\"country.CountryID\">\n                                    {{country.CountryName}}\n                                </option>\n                            </select>\n\n                            <span class=\"text-danger\"\n                                *ngIf=\"signUpForm.get('countryId').invalid && (signUpForm.get('countryId').dirty || signUpForm.get('countryId').touched || formDir.submitted) && signUpForm.get('countryId').errors?.required\">Please\n                                select country</span>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\"></label>\n                        <div class=\"col-md-8\">\n                            <input type=\"checkbox\" name=\"receiveNewsLetters\" id=\"receiveNewsLetters\" value=\"true\"\n                                class=\"form-check-input\" formControlName=\"receiveNewsLetters\">\n                            <label for=\"receiveNewsLetters\" class=\"form-check-label\">Receive News Letters</label>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group form-row\">\n                        <label class=\"col-md-4 col-form-label\">Skills:</label>\n                        <div class=\"col-md-8\" formArrayName=\"skills\">\n                            <div class=\"row\" *ngFor=\"let skill of signUpForm.get('skills')['controls']; let i = index\"\n                                [formGroupName]=\"i\">\n\n                                <div class=\"col-5\">\n                                    <input type=\"text\" name=\"skillName\" id=\"skillName\" placeholder=\"Skill Name\"\n                                        formControlName=\"skillName\" class=\"form-control\"\n                                        [ngClass]=\"{\n                                            'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || formDir.submitted),\n                                            'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || formDir.submitted) }\">\n                                </div>\n\n                                <div class=\"col-4\">\n                                    <select name=\"level\" id=\"level\" formControlName=\"level\" class=\"form-control\"\n                                        [ngClass]=\"{\n                                        'is-invalid': skill.get('level').invalid && (skill.get('level').dirty || skill.get('level').touched || formDir.submitted),\n                                        'is-valid': skill.get('level').valid && (skill.get('level').dirty || skill.get('level').touched || formDir.submitted) }\">\n\n                                        <option value=\"null\">Please Select</option>\n                                        <option value=\"Beginner\">Beginner</option>\n                                        <option value=\"Intermediate\">Intermediate</option>\n                                        <option value=\"Professional\">Professional</option>\n                                        <option value=\"Expert\">Expert</option>\n                                    </select>\n                                </div>\n\n                                <div class=\"col-3\">\n                                    <button class=\"btn btn-danger\" type=\"button\"\n                                        (click)=\"onRemoveClick(i)\">Remove</button>\n                                </div>\n                            </div>\n\n                            <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n                        </div>\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <button class=\"btn btn-success float-right\">Create Account</button>\n                    </div>\n                    <div class=\"text-danger\">{{registerError}}</div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { AboutComponent } from \"./admin/components/about/about.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { CanDeactivateGuardService } from './guards/can-deactivate-guard.service';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent, data: { linkIndex: 2 } },\n  { path: \"signup\", component: SignUpComponent, canDeactivate: [CanDeactivateGuardService], data: { linkIndex: 3 } },\n  { path: \"about\", component: AboutComponent, data: { linkIndex: 1 } },\n  { path: \"admin\", loadChildren: () => import(\"./admin/admin.module\").then(m => m.AdminModule) },\n  { path: \"employee\", loadChildren: () => import(\"./employee/employee.module\").then(m => m.EmployeeModule) }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true, enableTracing: false, preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}","export class EditTask {\n    TaskID: number;\n    TaskName: string;\n    Description: string;\n    ProjectID: number;\n    AssignedTo: string;\n    TaskPriorityID: number;\n    CurrentStatus: string;\n\n    constructor() {\n        this.TaskID = 0;\n        this.TaskName=null;\n        this.Description=null;\n        this.ProjectID=0;\n        this.AssignedTo=null;\n        this.TaskPriorityID=null;\n        this.CurrentStatus=null;\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}